{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\effect-reducer-context\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const isUserLoggedin = localStorage.getItem(\"isLoggedIn\");\n\n    if (isUserLoggedin === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/effect-reducer-context/src/App.js"],"names":["React","Fragment","useEffect","useState","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","localStorage","setItem","logoutHandler","removeItem","isUserLoggedin","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMM,aAAa,GAAG,MAAM;AAC1BF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,cAAc,GAAGJ,YAAY,CAACK,OAAb,CAAqB,YAArB,CAAvB;;AACA,QAAID,cAAc,KAAK,GAAvB,EAA4B;AAC1BR,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACP,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGF,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA7BQR,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/AuthContext';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const isUserLoggedin = localStorage.getItem(\"isLoggedIn\");\n    if (isUserLoggedin === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider>\n      <MainHeader onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}